From 06f45fce561e6c751d40a5aec66a517ae57a290c Mon Sep 17 00:00:00 2001
From: Volodymyr Bendiuga <volodymyr.bendiuga@westermo.se>
Date: Mon, 4 Jul 2016 09:59:16 +0200
Subject: [PATCH 23/38] addr: add nl_addr2str_nopref()
Organization: Westermo Network Technologies AB

This function does not write prefix at the end.
I.e. /32

Signed-off-by: Volodymyr Bendiuga <volodymyr.bendiuga@westermo.se>
Signed-off-by: Joachim Nilsson <troglobit@gmail.com>
---
 include/netlink/addr.h |  1 +
 lib/addr.c             | 50 ++++++++++++++++++++++++++++++++++++++++++
 libnl-3.sym            |  1 +
 3 files changed, 52 insertions(+)

diff --git a/include/netlink/addr.h b/include/netlink/addr.h
index 00ca784..d2695ba 100644
--- a/include/netlink/addr.h
+++ b/include/netlink/addr.h
@@ -63,6 +63,7 @@ extern int		nl_str2af(const char *);
 
 /* Translations to Strings */
 extern char *		nl_addr2str(const struct nl_addr *, char *, size_t);
+extern char *		nl_addr2str_nopref(const struct nl_addr *, char *, size_t);
 
 #ifdef __cplusplus
 }
diff --git a/lib/addr.c b/lib/addr.c
index 5529a2c..71bcf4e 100644
--- a/lib/addr.c
+++ b/lib/addr.c
@@ -1046,6 +1046,56 @@ prefix:
 	return buf;
 }
 
+/**
+ * Convert abstract address object to character string. No prefix version.
+ * @arg addr		Abstract address object.
+ * @arg buf		Destination buffer.
+ * @arg size		Size of destination buffer.
+ *
+ * Converts an abstract address to a character string and stores
+ * the result in the specified destination buffer.
+ * Unlike @nl_addr2str, this function does nto write prefix at the end.
+ *
+ * @return Address represented in ASCII stored in destination buffer.
+ */
+char *nl_addr2str_nopref(const struct nl_addr *addr, char *buf, size_t size)
+{
+	unsigned int i;
+	char tmp[16];
+
+	if (!addr || !addr->a_len) {
+		snprintf(buf, size, "none");
+		return buf;
+	}
+
+	switch (addr->a_family) {
+		case AF_INET:
+			inet_ntop(AF_INET, addr->a_addr, buf, size);
+			break;
+
+		case AF_INET6:
+			inet_ntop(AF_INET6, addr->a_addr, buf, size);
+			break;
+
+		case AF_DECnet:
+			dnet_ntop(addr->a_addr, addr->a_len, buf, size);
+			break;
+
+		case AF_LLC:
+		default:
+			snprintf(buf, size, "%02x",
+				 (unsigned char) addr->a_addr[0]);
+			for (i = 1; i < addr->a_len; i++) {
+				snprintf(tmp, sizeof(tmp), ":%02x",
+					 (unsigned char) addr->a_addr[i]);
+				strncat(buf, tmp, size - strlen(buf) - 1);
+			}
+			break;
+	}
+
+	return buf;
+}
+
 /** @} */
 
 /**
diff --git a/libnl-3.sym b/libnl-3.sym
index 82d2f07..9849396 100644
--- a/libnl-3.sym
+++ b/libnl-3.sym
@@ -345,6 +345,7 @@ global:
 	nla_put_s32;
 	nla_get_s64;
 	nla_put_s64;
+	nl_addr2str_nopref;
 } libnl_3_2_26;
 
 libnl_3_2_28 {
-- 
2.25.1

