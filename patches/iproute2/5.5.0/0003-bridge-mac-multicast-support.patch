From 580d5d51fb11b505ca5e3c9184121650cfc4acdb Mon Sep 17 00:00:00 2001
From: Volodymyr Bendiuga <volodymyr.bendiuga@westermo.se>
Date: Tue, 29 Aug 2017 14:47:00 +0200
Subject: [PATCH 3/5] bridge: mac multicast support
Organization: Westermo Network Technologies AB

Allow multicast mac addresses to be written to mdb,
alongside ip4 and ip6.

Signed-off-by: Volodymyr Bendiuga <volodymyr.bendiuga@westermo.se>
Signed-off-by: Joachim Nilsson <troglobit@gmail.com>
---
 bridge/mdb.c                   | 33 +++++++++++++++++++++++++++------
 include/uapi/linux/if_bridge.h |  1 +
 2 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/bridge/mdb.c b/bridge/mdb.c
index 928ae56d..0c8ce6e1 100644
--- a/bridge/mdb.c
+++ b/bridge/mdb.c
@@ -15,6 +15,7 @@
 #include <string.h>
 #include <arpa/inet.h>
 
+#include <netinet/ether.h>
 #include "libnetlink.h"
 #include "br_common.h"
 #include "rt_names.h"
@@ -126,9 +127,21 @@ static void print_mdb_entry(FILE *f, int ifindex, const struct br_mdb_entry *e,
 	if (filter_vlan && e->vid != filter_vlan)
 		return;
 
-	af = e->addr.proto == htons(ETH_P_IP) ? AF_INET : AF_INET6;
-	src = af == AF_INET ? (const void *)&e->addr.u.ip4 :
-			      (const void *)&e->addr.u.ip6;
+	if (e->addr.proto == htons(ETH_P_IP)) {
+		af = AF_INET;
+		src = (const void *)&e->addr.u.ip4;
+	}
+	else if (e->addr.proto == htons(ETH_P_ALL)) {
+		af = AF_INET;
+		src = (const void *)&e->addr.u.mac;
+	}
+	else if (e->addr.proto == htons(ETH_P_IPV6)) {
+		af = AF_INET6;
+		src = (const void *)&e->addr.u.ip6;
+	} else {
+		af = AF_INET;
+		src = (const void *)&e->addr.u.ip4;
+	}
 	dev = ll_index_to_name(ifindex);
 
 	open_json_object(NULL);
@@ -140,7 +153,9 @@ static void print_mdb_entry(FILE *f, int ifindex, const struct br_mdb_entry *e,
 
 	print_color_string(PRINT_ANY, ifa_family_color(af),
 			    "grp", " grp %s",
-			    inet_ntop(af, src, abuf, sizeof(abuf)));
+			    e->addr.proto == htons(ETH_P_ALL)
+			    ? ll_addr_n2a(e->addr.u.mac, ETH_ALEN, ll_index_to_type(e->ifindex), abuf, sizeof(abuf))
+			    : inet_ntop(af, src, abuf, sizeof(abuf)));
 
 	print_string(PRINT_ANY, "state", " %s",
 			   (e->state & MDB_PERMANENT) ? "permanent" : "temp");
@@ -422,8 +437,14 @@ static int mdb_modify(int cmd, int flags, int argc, char **argv)
 
 	if (!inet_pton(AF_INET, grp, &entry.addr.u.ip4)) {
 		if (!inet_pton(AF_INET6, grp, &entry.addr.u.ip6)) {
-			fprintf(stderr, "Invalid address \"%s\"\n", grp);
-			return -1;
+			struct ether_addr *mac = NULL;
+			mac = ether_aton(grp);
+			if (!mac) {
+				fprintf(stderr, "Invalid address \"%s\"\n", grp);
+				return -1;
+			}
+			memcpy(entry.addr.u.mac, mac, ETH_ALEN);
+			entry.addr.proto = htons(ETH_P_ALL);
 		} else
 			entry.addr.proto = htons(ETH_P_IPV6);
 	} else
diff --git a/include/uapi/linux/if_bridge.h b/include/uapi/linux/if_bridge.h
index 31fc51bd..34bad4ed 100644
--- a/include/uapi/linux/if_bridge.h
+++ b/include/uapi/linux/if_bridge.h
@@ -244,6 +244,7 @@ struct br_mdb_entry {
 		union {
 			__be32	ip4;
 			struct in6_addr ip6;
+			__u8 mac[ETH_ALEN];
 		} u;
 		__be16		proto;
 	} addr;
-- 
2.25.1

