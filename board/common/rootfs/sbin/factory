#!/bin/sh

reboot=1
doreboot=0
interactive=1
resetme=/mnt/factory-reset.now

usage()
{
    echo "usage: factory [opts]"
    echo
    echo "Options:"
    echo " -h, --help        This help text"
    echo " -r, --no-reboot   Don't reboot.  Reboot manually to activate."
    echo " -y, --assume-yes  Automatic yes to prompts; assume \"yes\" as answer to all"
    echo "                   prompts and run non-interactively"
    echo
    echo "Note: this program initiates a factory reset by raising a flag and rebooting"
    echo "      the system.  When it comes back up it safely removes all the OverlayFS"
    echo "      worker/upper directories for /etc, /home, and /var"
    echo

    exit "$1"
}

prompt()
{
    if [ ! $interactive ]; then
	return
    fi

    printf "%s (y/N)? " "$1"
    read -r yorn

    if [ "$yorn" != "y" ] && [ "$yorn" != "Y" ]; then
	echo "Aborting."
	exit 0;
    fi
}

while [ "$1" != "" ]; do
    case $1 in
	-h | --help)
	    usage 0
	    ;;
	-r | --no-reboot)
	    unset reboot
	    ;;
	-y | --assume-yes)
	    unset interactive
	    ;;
	*)
	    usage 1
	    ;;
    esac
    shift
done

if ! tty >/dev/null; then
    unset interactive
elif [ "$(whoami)" = "factory" ]; then
    if [ "$(tty)" != "/dev/console" ]; then
	echo "Factory reset only allowed from console login"
	exit 1
    fi
    doreboot=1
fi
	
prompt "Factory reset device, restores /etc, /home, and /var,"
echo "Preparing system for factory reset on next boot ..."
touch $resetme
sync
echo "Done."
echo 

# Unconditional reboot when launched as console login shell
if [ $reboot ]; then
    [ $doreboot ] && prompt "Reboot now to perform reset"
    /sbin/reboot
fi

exit 0
